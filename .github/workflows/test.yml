---
on:
    pull_request:
    push:
        branches:
            - main

jobs:
    pytest:
        defaults:
            run:
                working-directory: python-cli

        timeout-minutes: 20
        strategy:
            fail-fast: false
            matrix:
                cfg:
                    # - os: ubuntu-latest
                    #   python-version: '3.6'
                    # - os: ubuntu-latest
                    #   python-version: '3.7'
                    # - os: ubuntu-latest
                    #   python-version: '3.8'
                    # - os: ubuntu-latest
                    #   python-version: '3.9'
                    # - os: macos-latest
                    #   python-version: '3.6'
                    # - os: macos-latest
                    #   python-version: '3.7'
                    # - os: macos-latest
                    #   python-version: '3.8'
                    - os: macos-latest
                      python-version: '3.9'
                      test-pypi-publish: true

        runs-on: ${{ matrix.cfg.os }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.cfg.python-version }}
            - run: pip install poetry
            - run: poetry config virtualenvs.in-project true
            - uses: actions/cache@v2
              with:
                  path: '**/node_modules'
                  key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
            - run: yarn install
            - run: poetry install
            - run: poetry version "$(poetry version -s).dev$(date +%s)"
            - run: poetry build
            - run: poetry run pip install -U "dist/pytest-deepcov-$(poetry version -s).tar.gz"
            - if: matrix.cfg.test-pypi-publish
              run: poetry run twine upload --repository testpypi dist/* -ualex-treebeard-test -p${{ secrets.TEST_PYPI_PASSWORD }}
            - uses: pre-commit/action@v2.0.0
              with:
                  extra_args: --verbose --all-files

            - run: pwd;ls -la;poetry run pytest

    # ui-test:
    #     strategy:
    #         fail-fast: false
    #         matrix:
    #             cfg:
    #                 - os: macos-latest
    #     runs-on: ${{ matrix.cfg.os }}
    #     steps:
    #         - uses: actions/checkout@v2
    #         - run: yarn install
    #         - run: yarn lint
    #         - run: npm i --global vsce
    #         - run: vsce package
    #           env:
    #               VSCE_PAT: ${{ secrets.VSCE_PAT }}
    #         - run: yarn test
